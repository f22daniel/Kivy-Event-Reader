
<SettingsButton>
    settings_image: settings_image
    background_normal: ""
    background_color: (0, 0, 0, 0)
    col: (51/255, 51/255, 1, 1)
    canvas.before:
        Color:
            rgba: self.col
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [12]
    Image:
        id: settings_image
        source: "icons/gear.png"
        size: self.parent.size
        pos: self.parent.pos
        keep_ratio: True
        allow_stretch: True
        # Animation adjustment
        anim_delay: 0
        rot_angle: 0
        canvas.before:
            PushMatrix
            Rotate:
                angle: self.rot_angle
                origin: self.center
        canvas.after:
            PopMatrix

<TaskButton>
    task_image: task_image
    id: task_button
    background_normal: ""
    background_color: (0, 0, 0, 0)
    col: (51/255, 26/255, 0, 1/2) if task_button.disabled else (51/255, 51/255, 1, 1)

    canvas.before:
        Color:
            rgba: (51/255, 26/255, 0, 1/2) if task_button.disabled else (51/255, 51/255, 1, 1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [12]
    FloatLayout:
        size: self.parent.size
        pos: self.parent.pos
        Image:
            id: task_image
            color: (1, 1, 1, 1/2) if task_button.disabled else (1,1,1,1)
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            source: "icons/transparent.png"
            keep_ratio: True
            allow_stretch: True
            # Animation adjustment
            anim_delay: 0
            rot_angle: 0
            canvas.before:
                PushMatrix
                Rotate:
                    angle: self.rot_angle
                    origin: self.center
            canvas.after:
                PopMatrix

<CloseButton>
    task_image: task_image
    id: play_button
    FloatLayout:
        size: self.parent.size
        pos: self.parent.pos
        Image:
            id: task_image
            color: (1, 1, 1, 1/2) if play_button.disabled else (1,1,1,1)
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            source: "icons/close_button.png"
            keep_ratio: True
            allow_stretch: True
            # Animation adjustment
            anim_delay: 0
            rot_angle: 0
            canvas.before:
                PushMatrix
                Rotate:
                    angle: self.rot_angle
                    origin: self.center
            canvas.after:
                PopMatrix

<PlayButton>
    task_image: task_image
    id: play_button
    FloatLayout:
        size: self.parent.size
        pos: self.parent.pos
        Image:
            id: task_image
            color: (1, 1, 1, 1/2) if play_button.disabled else (1,1,1,1)
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            source: "icons/play.png"
            keep_ratio: True
            allow_stretch: True
            # Animation adjustment
            anim_delay: 0
            rot_angle: 0
            canvas.before:
                PushMatrix
                Rotate:
                    angle: self.rot_angle
                    origin: self.center
            canvas.after:
                PopMatrix

<PauseButton>
    task_image: task_image
    id: pause_button
    FloatLayout:
        size: self.parent.size
        pos: self.parent.pos
        Image:
            id: task_image
            color: (1, 1, 1, 1/2) if pause_button.disabled else (1,1,1,1)
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            source: "icons/pause.png"
            keep_ratio: True
            allow_stretch: True
            # Animation adjustment
            anim_delay: 0
            rot_angle: 0
            canvas.before:
                PushMatrix
                Rotate:
                    angle: self.rot_angle
                    origin: self.center
            canvas.after:
                PopMatrix

<StopButton>
    task_image: task_image
    id: stop_button
    FloatLayout:
        size: self.parent.size
        pos: self.parent.pos
        Image:
            id: task_image
            color: (1, 1, 1, 1/2) if stop_button.disabled else (1,1,1,1)
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            source: "icons/stop.png"
            keep_ratio: True
            allow_stretch: True
            # Animation adjustment
            anim_delay: 0
            rot_angle: 0
            canvas.before:
                PushMatrix
                Rotate:
                    angle: self.rot_angle
                    origin: self.center
            canvas.after:
                PopMatrix

<NetworkToggle>
    network_image: network_image
    col: (20/255, 100/255, 1, 1)

    canvas.before:
        Color:
            rgba: self.col
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [12]
    FloatLayout:
        size: self.parent.size
        pos: self.parent.pos
        Image:
            id: network_image
            color: (1,1,1,1)
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            source: "icons/transparent.png"
            keep_ratio: True
            allow_stretch: True
            # Animation adjustment
            anim_delay: 0
            rot_angle: 0
            canvas.before:
                PushMatrix
                Rotate:
                    angle: self.rot_angle
                    origin: self.center
            canvas.after:
                PopMatrix

<EthereumToggle>
    network_image: network_image
    FloatLayout:
        size: self.parent.size
        pos: self.parent.pos
        Image:
            id: network_image
            color: (1,1,1,1)
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            source: "icons/ethereum.png"
            keep_ratio: True
            allow_stretch: True
            # Animation adjustment
            anim_delay: 0
            rot_angle: 0
            canvas.before:
                PushMatrix
                Rotate:
                    angle: self.rot_angle
                    origin: self.center
            canvas.after:
                PopMatrix

<GoerliToggle>
    network_image: network_image
    FloatLayout:
        size: self.parent.size
        pos: self.parent.pos
        Image:
            id: network_image
            color: (1,1,1,1)
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            source: "icons/goerli.png"
            keep_ratio: True
            allow_stretch: True
            # Animation adjustment
            anim_delay: 0
            rot_angle: 0
            canvas.before:
                PushMatrix
                Rotate:
                    angle: self.rot_angle
                    origin: self.center
            canvas.after:
                PopMatrix

<BinanceToggle>
    network_image: network_image
    FloatLayout:
        size: self.parent.size
        pos: self.parent.pos
        Image:
            id: network_image
            color: (1,1,1,1)
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            source: "icons/binance.png"
            keep_ratio: True
            allow_stretch: True
            # Animation adjustment
            anim_delay: 0
            rot_angle: 0
            canvas.before:
                PushMatrix
                Rotate:
                    angle: self.rot_angle
                    origin: self.center
            canvas.after:
                PopMatrix

<BinanceTestToggle>
    network_image: network_image
    FloatLayout:
        size: self.parent.size
        pos: self.parent.pos
        Image:
            id: network_image
            color: (1,1,1,1)
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            source: "icons/binance_test.png"
            keep_ratio: True
            allow_stretch: True
            # Animation adjustment
            anim_delay: 0
            rot_angle: 0
            canvas.before:
                PushMatrix
                Rotate:
                    angle: self.rot_angle
                    origin: self.center
            canvas.after:
                PopMatrix

<PolygonToggle>
    network_image: network_image
    FloatLayout:
        size: self.parent.size
        pos: self.parent.pos
        Image:
            id: network_image
            color: (1,1,1,1)
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            source: "icons/polygon.png"
            keep_ratio: True
            allow_stretch: True
            # Animation adjustment
            anim_delay: 0
            rot_angle: 0
            canvas.before:
                PushMatrix
                Rotate:
                    angle: self.rot_angle
                    origin: self.center
            canvas.after:
                PopMatrix

<MumbaiToggle>
    network_image: network_image
    FloatLayout:
        size: self.parent.size
        pos: self.parent.pos
        Image:
            id: network_image
            color: (1,1,1,1)
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            source: "icons/mumbai.png"
            keep_ratio: True
            allow_stretch: True
            # Animation adjustment
            anim_delay: 0
            rot_angle: 0
            canvas.before:
                PushMatrix
                Rotate:
                    angle: self.rot_angle
                    origin: self.center
            canvas.after:
                PopMatrix

<TimeLabel>
    background_color: (0, 0, 0, 0)
    font_size: 18
    bold: True
    col: (0, 102/255, 204/255, 1)
    canvas.before:
        Color:
            rgba: self.col
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [12]

<EventNameLabel>
    col: (0, 0, 204/255, 1)
    font_size: 14
    size_hint: None, None
    height: 25
    width: self.texture_size[0]
    canvas.before:
        Color:
            rgba: self.col
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [8]

<EventTimeLabel>
    col: (51/255, 51/255, 1, 1)

<EventKeyLabel>
    col: (177/255, 62/255, 1, 1)

<EventValueLabel>
    col: (148/255, 77/255, 1, 1)

<SeparateLabel@Label>
    markup: True
    bold: True
    canvas.before:
        Color:
            rgba: (0, 0, 0 , 1)
        Rectangle:
            size: self.size
            pos: self.pos

<EventLabel>
    size_hint: 1, None
    height: 30
    font_size: 20
    bold: True
    canvas.before:
        Color:
            rgba: (0, 1/2, 1, 1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [10]

<StandardLabel>
    font_size: 14
    bold: True
    markup: True
    canvas.before:
        Color:
            rgba: (1/2, 1/2, 1, 1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [10]

<DescriptionLabel@Label>
    bold: True
    markup: True
    font_size: 13
    size_hint: 0.2, 1
    canvas.before:
        Color:
            rgba: (1/2, 1/2, 1, 1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [10]

<ConnectivityLabel>
    size_hint: 0.04, 1
    col: (1, 0, 0, 1)
    canvas.before:
        Color:
            rgba: self.col
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [16]

<StandardTextInput@TextInput>
    font_size: 13
    multiline: False

<ContractInput@TextInput>
    size_hint: 1, 1
    font_size: 14

<DefaultButton>
    background_color: (0, 0, 0, 0)
    col:  (100/255, 100/255, 1, 1)
    font_size: 18
    bold: True
    canvas.before:
        Color:
            rgba: (51/255, 26/255, 0, 1/2) if self.disabled else self.col
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [12]